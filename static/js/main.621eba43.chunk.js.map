{"version":3,"sources":["logo.svg","App.js","IdeaBox.js","reportWebVitals.js","apis.js","index.js"],"names":["App","className","src","logo","alt","href","target","rel","TheIdexBox","useState","key","title","proposer","vote","content","ideaListData","setIdeaListData","isVisible","setIsVisible","isDelete","setIsDelete","visibleContent","SetVisibleContent","columns","dataIndex","dataIdex","render","onClick","event","stopPropagation","icon","DeleteOutlined","visible","onOk","onDelete","onCancel","data","splice","findIndex","info","TextArea","Input","TargetContent","setContent","span","offset","dataSource","pagination","onRow","record","rowIndex","footer","labelCol","wrapper","onFinish","values","push","length","toString","slice","Item","label","name","rules","required","message","rows","wrapperCol","type","htmlType","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","APIs","idea","setIdea","useEffect","axios","get","response","console","log","catch","error","id","TableControl","props","clickShowButton","bind","clickCloseButton","state","isClick","this","setState","button","CloseButton","ShowButton","Information","race","age","height","weight","React","Component","FormControl","isShow","value","setFalse","setTrue","handleChange","handleSubmit","handleInput","changeState","elements","preventDefault","alert","TextList","texts","element","onSubmit","DropDown","options","onChange","map","option","DropBox","selectedValue","setSelectedValue","newList","text","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.621eba43.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <p>\n          This is a static server for creating a website that contains my understanding of leetcode problems\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n      \n    </div>\n  );\n}\n\n\n\n\nexport default App;\n","import \"./styles.css\";\r\nimport { useState, useEffect } from \"react\";        // useState and useEffect can be used in function component\r\nimport { Table, Input, Form, Button, Modal, Row, Col } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\n\r\nexport default function TheIdexBox() {\r\n    const [ideaListData, setIdeaListData] = useState([\r\n        {\r\n            key: \"1\",\r\n            title: \"Plan 1\",\r\n            proposer: \"jingyi@gmail.com\",\r\n            vote: 0,\r\n            content: \"This is a test plan\"\r\n        },\r\n        {\r\n            key: \"2\",\r\n            title: \"Plan 2\",\r\n            proposer: \"feiyangm@178.com\",\r\n            vote: 0,\r\n            content: \"Plan Content\"\r\n        }\r\n    ]);\r\n    \r\n    const [isVisible, setIsVisible] = useState(false);\r\n    const [isDelete, setIsDelete] = useState(false);\r\n    const [visibleContent, SetVisibleContent] = useState(false);\r\n\r\n    const columns = [\r\n        {\r\n            title: \"Idea Title\",\r\n            dataIndex: \"title\",\r\n            key: \"title\"\r\n        },\r\n        {\r\n            title: \"Proposer\",\r\n            dataIndex: \"proposer\",\r\n            key: \"proposer\"\r\n        },\r\n        {\r\n            title: \"Vote\",\r\n            dataIdex: \"vote\",\r\n            key: \"vote\"\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            dataIndex: \"key\",\r\n            key: \"action\",\r\n            render: (key) => (\r\n                <div>\r\n                    <Button onClick={(event) => {setIsDelete(true); event.stopPropagation();}} icon={<DeleteOutlined />} >\r\n                        delete\r\n                    </Button>\r\n                    <Modal visible={isDelete} onOk={(event) => {onDelete(key); event.stopPropagation();}} onCancel={(event) => {setIsDelete(false); event.stopPropagation();}} title=\"Do you want delete it?\">\r\n                    </Modal>\r\n                </div>\r\n            )\r\n        }\r\n    ];\r\n    \r\n    /*\r\n    const [isDelete, setIsDelet] = useState(false);\r\n\r\n    const confirmDelete = (key) => {\r\n        if (isDelete) {\r\n            onDelete(key);\r\n        } else {\r\n            \r\n        }\r\n    }\r\n    */\r\n\r\n    const [ideaList, setIdeaList] = useState(columns);      // making columns stateful, so we could alter it later\r\n\r\n    const onDelete = (key) => {\r\n        let data = ideaListData;\r\n        data.splice(\r\n            data.findIndex((info) => info.key === key), 1\r\n        );\r\n\r\n        setIdeaListData([...data]);\r\n        setIsDelete(false);\r\n    }\r\n\r\n\r\n    const onClick = () => {\r\n        setIsVisible(true);\r\n    }\r\n\r\n    // onFinish contains onSubmit                   values would be the data from form\r\n    const onFinish = (values) => {\r\n        let data = ideaListData;\r\n        data.push({\r\n            key: (data.length + 1).toString(),\r\n            title: values.title,\r\n            proposer: values.proposer,\r\n            vote: 0,\r\n            content: values.content\r\n        });\r\n\r\n        setIdeaListData(data.slice());\r\n        setIsVisible(false);\r\n\r\n    }\r\n    \r\n    const handleOk = () => {\r\n        setIsVisible(false);\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setIsVisible(false);\r\n    }\r\n\r\n    const { TextArea } = Input;\r\n    const [TargetContent, setContent] = useState(\"\");\r\n\r\n    /*\r\n    <Modal\r\n        visible={isVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        footer={null}\r\n        title=\"Add an idea\"\r\n      >\r\n        <Form labelCol={{ span: 4 }} wrapper={{ span: 20 }} onFinish={onFinish}>\r\n          <Form.Item\r\n            label=\"Title\"\r\n            name=\"title\"\r\n            rules={[{ required: true, message: \"Please input title of idea\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Proposer\"\r\n            name=\"proposer\"\r\n            rules={[{ required: true, message: \"Please input your email\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item wrapperCol={{ offset: 20, span: 4 }}>\r\n            <Button type=\"primary\" htmlType=\"sinmit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n    </Modal>\r\n    */\r\n\r\n    return (\r\n        <div className=\"TheIdeaBox\">\r\n            <Row>\r\n                <Col span={4} offset={20}>\r\n                    <Button onClick={onClick}>Add an idea</Button>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            <Table dataSource={ideaListData} columns={columns} pagination={false} onRow={(record, rowIndex) => \r\n                {\r\n                    return {\r\n                        onClick: event => {\r\n                            // console.log(record.content);            // rendering the element before onload all information\r\n                            setContent(record.content);\r\n                            SetVisibleContent(true);\r\n                        }\r\n                    }\r\n                }} />\r\n\r\n            <Modal visible={visibleContent} onOk={() => SetVisibleContent(false)} onCancel={() => SetVisibleContent(false)} title=\"Content of Idea\" footer={null}>\r\n                <p>Content: {TargetContent}</p>\r\n            </Modal>\r\n\r\n            <Modal visible={isVisible} onOk={handleOk} onCancel={handleCancel} footer={null} title=\"New Idea\">\r\n                <Form labelCol={{ span: 4 }} wrapper={{ span: 20 }} onFinish={onFinish}>\r\n                    <Form.Item label=\"Title\" name=\"title\" rules={[{required: true, message: \"Please enter title of idea\"}]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Proposer\" name=\"proposer\" rules={[{required: true, message: \"Please enter proposer of idea\"}]}>\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Content\" name=\"content\" rules={[{required: true, message: \"Please provide description of your plan\"}]}>\r\n                        <TextArea rows={4} />\r\n                    </Form.Item>\r\n                    <Form.Item wrapperCol={{offset: 20, span: 4}}>\r\n                        <Button type=\"primary\" htmlType=\"sinmit\">\r\n                            submit\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useState, useEffect } from \"react\";\r\nimport axios from 'axios'; \r\n\r\n// CORS \r\n//\r\nexport default function APIs() {\r\n    const baseUrl1 = \"http://localhost:5000/\";\r\n    const [idea, setIdea] = useState(null);\r\n\r\n    useEffect(() => {\r\n        axios.get(baseUrl1).then((response) => {\r\n            console.log(response.data)\r\n            setIdea(response.data)\r\n        }).catch((error) => {\r\n            console.log(error) // FIXME  time out/interval(JS) \r\n        });\r\n\r\n    }, []); // empty array means only run once\r\n    \r\n\r\n    // .get()\r\n    //        => asyn\r\n    if (!idea) \r\n        return null;\r\n\r\n\r\n    // TODO     when to get return value from flask application\r\n    return (\r\n        <div>\r\n            <ul>\r\n                <li>id: {idea.id}</li>\r\n                <li>proposer: {idea.proposer}</li>\r\n                <li>title: {idea.title}</li>\r\n                <li>vote: {idea.vote}</li>\r\n            </ul>\r\n        </div>\r\n    )\r\n\r\n    \r\n\r\n    /*\r\n    reponse\r\n    data:[{\"key\": , \"title\": , \"content\": , \"proposer\": , \"vote\": }, {}]\r\n\r\n    status code: 200\r\n\r\n\r\n    */\r\n}\r\n    ","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport TheIdexBox from \"./IdeaBox\";\nimport Box from \"./test\";\nimport reportWebVitals from './reportWebVitals';\nimport APIs from \"./apis\";\n\n\nclass TableControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.clickShowButton = this.clickShowButton.bind(this);\n    this.clickCloseButton = this.clickCloseButton.bind(this);\n    this.state = {isClick: false};\n  }\n  \n  clickShowButton() {\n    this.setState({isClick: true});\n  }\n\n  clickCloseButton() {\n    this.setState({isClick: false});\n  }\n\n  /*\n  handleClick() {\n    console.log(this.state); \n    // uses setState to change the state, (this.state --> access the state)\n    this.setState(\n      state => ({text: \"Hello! Feiyang Ma\"})\n    \n    );\n  }\n  */\n\n// <button onClick={() => this.handleClick()}>show data</button>\n// <p isClick={false}>{this.state.text}</p>\n  \n  render() {\n    const isClick = this.state.isClick;\n    let button;\n    if (isClick) {\n      button = <CloseButton onClick = {this.clickCloseButton}/>;\n    } else {\n      button = <ShowButton onClick = {this.clickShowButton}/>;\n    }\n\n\n    return (\n      <div className = \"people-list\">\n        <p>To see Feiyang Ma's information, click the button {button}</p>\n        {\n          isClick ? <Information isClick = {isClick} name=\"Feiyang Ma\" race=\"Asain\" age=\"21\" height=\"179cm\" weight=\"67kg\"/> : \"\"\n        }\n      </div>\n    );\n  }\n}\n\n\nclass FormControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {isShow: false, value: \"\", name: \"\", isClick: false};\n    this.setFalse = this.setFalse.bind(this);               // .bind method pass data as an argument to the function of a class based component\n    this.setTrue = this.setTrue.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.changeState = this.changeState.bind(this);\n    \n  }\n  \n  \n  changeState() {\n    if (this.state.isClick) {                              // this.state. cannot access the state in class component?\n      this.setState({isClick: false});\n    } else {\n      this.setState({isClick: true});\n    }\n    \n  }\n  \n\n  setFalse() {\n    this.setState({isShow: false});\n  }\n\n  setTrue() {\n    this.setState({isShow: true});\n  }\n\n\n  \n // how event is detected by  \n  handleSubmit(event) {\n    this.setState({name: event.target.elements[0].value});\n    this.setState({value: event.target.elements[1].value});\n    this.setState({isClick: true});\n    //alert(\"The submitted name is: \" + this.state.name);\n    event.preventDefault();\n\n  }\n\n  handleSubmit2(event) {\n    //this.changeState(event);\n    this.setState({value: event.target.value});\n    alert(\"The submitted value is: \" + this.state.value);\n    event.preventDefault();\n\n  }\n\n  handleInput(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleChange(event) {\n    this.setState({name: event.target.value});        // event.target.value == \"input value\" in <input />\n  }\n\n  render() {\n    const isShow = this.state.isShow;\n    const isClick = this.state.isClick;\n    const info = this.state.name + this.state.value;\n    \n    let button;\n    if (isShow) {\n      button = <CloseButton onClick={this.setFalse} />;\n    } else {\n      button = <ShowButton onClick={this.setTrue} />;\n    }\n\n\n    // type: text, number, submit                                   \"hidden\" string?\n    // Name:          <input> cannot show the value I want             \n    return (\n      <div className=\"sample form\">\n        <p>To see more information, click button {button}</p>\n        {\n          isShow ? <TextList isShow={isShow} texts={element}/> : \"\"\n        }\n        <hr></hr>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Name: <input name=\"name\" type=\"text\" />\n          </label>\n\n          <label>\n            Information: <input name=\"info\" type=\"text\" />\n          </label>\n          <input type=\"submit\" value=\"submit\" />\n          \n        </form>\n        {\n          isClick ? <p>{info} </p> : \"\"\n        }\n        \n      </div>\n    );\n  }\n}\n\n// any event could happen in any tag?\n// in form  no onclick?\n// <ChangeState /> --> function component( or import ) use as a component\n/*\nfunction ChangeState() {\n  const [value] = useState(false);     // value: the current state; setValue: a function to change value; false: default value   useState usage?\n  if (value) {\n    this.setState({isShow: false});\n  } else {\n    this.setState({isShow: true});\n  }\n}\n*/\n// event could trigger more funtion ?      event.target.  to access \n\n\n\nconst element = [\n  {id: 1, name: \"Feiyang Ma\", age: \"21\", height: \"179cm\", weight: \"67kg\"},\n  {id: 2, name: \"V\", age: \"28\", height: \"179cm\", weight: \"60kg\"},\n  {id: 3, name: \"Jack\", age: \"35\", height: \"185cm\", weight: \"80kg\"}\n];\n\nconst options = [\n    {label: \"Array\", value: \"array\"},\n    {label: \"String\", value: \"string\"},\n    {label: \"Data Structure\", value: \"data structure\"},\n    {label: \"Algorithm\", value: \"algorithm\"},\n    {label: \"Dynamic Programming\", value: \"dp\"}\n]\n\n\nfunction Information(props) {\n  return <p>{props.name}, {props.race}, {props.age} years old, {props.height} height, weight {props.weight}.</p>;\n}\n\nconst DropDown = ({label, value, options, onChange}) => {\n  return (\n    <label>\n      {label}\n      <select value={value} onChange={onChange}>\n        {options.map((option) => (\n          <option value={option.value}>{option.label}</option>\n        ))}\n      </select>\n    </label>\n  );\n};\n\nfunction DropBox({label, options}) {\n  //const [value, setValue] = useState(\"array\");\n\n  const [selectedValue, setSelectedValue] = useState(\"\");\n\n  function handleValueChange(event) {\n    setSelectedValue(event.target.value);\n  }\n\n  /*\n  const handleChange = (event) => {\n    setValue(event.target.value);\n    console.log(event.target.value);\n  }\n  */\n  \n  /*\n  const options = [\n    {label: \"Array\", value: \"array\"},\n    {label: \"String\", value: \"string\"},\n    {label: \"Data Structure\", value: \"data structure\"},\n    {label: \"Algorithm\", value: \"algorithm\"},\n    {label: \"Dynamic Programming\", value: \"dp\"}\n  ]\n  */\n\n  // map function take in one element from a sequence and create a series of elements\n  return (\n    <div>\n      <DropDown \n        label={label}\n        options={options}\n        value={selectedValue}\n        onChange={handleValueChange}\n      />\n\n      <p>you would like to explore {selectedValue}!</p>\n    </div>\n  );\n}\n\n\n\n\nfunction CloseButton(props) {\n  return (\n    <button onClick = {props.onClick}>\n      close data\n    </button>\n  );\n}\n\n\nfunction ShowButton(props) {\n  return (\n    <button onClick = {props.onClick}>\n      show data\n    </button>\n  );\n}\n\n\n// TextList --> key needs to use for binding elements in the list(for map() usage )\n\nfunction TextList(props) {\n  const texts = props.texts;\n  const newList = texts.map((text) => \n    <p key={text.id}>                                            \n      {text.name} {text.age} {text.height} {text.weight}\n    </p>\n  );\n\n\n  return (\n    <ul>{newList}</ul>\n  );\n}\n\n\n\nfunction TestBackend() {\n  const [data, setData] = useState([{}])\n\n  useEffect(() => {\n    fetch(\"/\").then(\n      res => res.json()\n    ).then(\n      data => {\n        setData(data)\n        console.log(data)\n      }\n    )\n  })\n\n}\n\n\nReactDOM.render(\n  <div>\n    <App />\n    <TheIdexBox />\n    <TableControl />\n    <ul></ul>\n    <FormControl />\n    <APIs />\n    <DropBox \n      label=\"Which topic do you want to explore?\"\n      options={options}\n    />\n  </div>,\n  document.getElementById('root')\n);\n\n\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}